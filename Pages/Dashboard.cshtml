@page
@model DashboardModel
@{
    ViewData["Title"] = "Panel Principal";
}

<style>
    @@media (max-width: 768px) {
        .header h1 {
            font-size: 1.8rem;
        }

        .dashboard-grid {
            grid-template-columns: 1fr;
        }
    }

    @@keyframes fadeInDown {
        from {
            opacity: 0;
            transform: translateY(-30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes pulse {
        0%, 100% {
            opacity: 1;
            transform: scale(1);
        }

        50% {
            opacity: 0.8;
            transform: scale(1.1);
        }
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #cdcffa 0%, #e3dff5 100%);
        min-height: 100vh;
        padding: 20px;
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
    }

    .header {
        text-align: center;
        color: white;
        margin-bottom: 40px;
        animation: fadeInDown 0.6s ease;
    }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.95;
        }

    .logout-btn {
        margin-top: 15px;
        padding: 10px 25px;
        background: rgba(255,255,255,0.2);
        border: 2px solid white;
        color: white;
        border-radius: 25px;
        cursor: pointer;
        font-size: 0.95rem;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
    }

        .logout-btn:hover {
            background: white;
            color: #667eea;
            transform: translateY(-2px);
        }

    .dashboard-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 25px;
        margin-bottom: 30px;
    }

    .card {
        background: white;
        border-radius: 20px;
        padding: 30px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        transition: all 0.3s ease;
        animation: fadeInUp 0.6s ease;
    }

        .card:hover {
            transform: translateY(-8px);
            box-shadow: 0 15px 40px rgba(0,0,0,0.3);
        }

        .card h2 {
            font-size: 1.4rem;
            color: #333;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

    .status-box {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        padding: 20px;
        border-radius: 15px;
        text-align: center;
        margin-bottom: 20px;
    }

    .status-indicator {
        display: inline-flex;
        align-items: center;
        gap: 10px;
        font-size: 1.2rem;
        font-weight: 600;
    }

    .status-dot {
        width: 16px;
        height: 16px;
        border-radius: 50%;
        animation: pulse 2s infinite;
    }

    .dot-green {
        background-color: #22c55e;
        box-shadow: 0 0 15px rgba(34, 197, 94, 0.6);
    }

    .dot-red {
        background-color: #ef4444;
        box-shadow: 0 0 15px rgba(239, 68, 68, 0.6);
    }

    .feed-btn {
        width: 100%;
        padding: 15px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        border-radius: 12px;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
    }

        .feed-btn:hover:not(:disabled) {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.6);
        }

        .feed-btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

    .last-feed {
        font-size: 2rem;
        font-weight: 700;
        color: #667eea;
        text-align: center;
        margin-top: 10px;
    }

    .history-card {
        grid-column: 1 / -1;
    }

    .feed-history {
        max-height: 400px;
        overflow-y: auto;
        padding-right: 10px;
    }

        .feed-history::-webkit-scrollbar {
            width: 8px;
        }

        .feed-history::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 10px;
        }

        .feed-history::-webkit-scrollbar-thumb {
            background: #667eea;
            border-radius: 10px;
        }

            .feed-history::-webkit-scrollbar-thumb:hover {
                background: #764ba2;
            }

    .history-item {
        background: linear-gradient(135deg, #f5f7fa 0%, #e8ecf3 100%);
        padding: 15px 20px;
        margin-bottom: 12px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        gap: 15px;
        transition: all 0.3s ease;
        border-left: 4px solid #667eea;
    }

        .history-item:hover {
            transform: translateX(5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

    .history-icon {
        font-size: 1.8rem;
    }

    .history-time {
        font-weight: 600;
        color: #333;
        font-size: 1.05rem;
    }

    .loading {
        text-align: center;
        padding: 30px;
        color: #666;
        font-size: 1.1rem;
    }
</style>

<div class="container">
    <div class="header">
        <h1>🐶 Panel de Alimentación Automática</h1>
        <p>Controla, programa y supervisa el comedero de tu mascota</p>
        <a href="/Logout" class="logout-btn">Cerrar sesión</a>
    </div>

    <div class="dashboard-grid">
        <div class="card">
            <h2>📡 Estado del Comedero</h2>
            <div class="status-box">
                <div id="status" class="status-indicator">
                    <span class="status-dot dot-red"></span>
                    <span>Desconectado</span>
                </div>
            </div>
            <button class="feed-btn" id="btn-feed">🐾 Alimentar Manualmente</button>
        </div>

        <div class="card">
            <h2>⏰ Última Alimentación</h2>
            <div class="last-feed" id="lastFeed">-</div>
        </div>

    </div>
</div>

<script>
    const apiBase = "https://apicomederopet.onrender.com/api/feed";
    const apiStatus = `${apiBase}/status`;
    const apiFeed = `${apiBase}/manual`;

    const statusEl = document.getElementById("status");
    const lastFeedEl = document.getElementById("lastFeed");
    const feedHistoryEl = document.getElementById("feedHistory");

    async function loadStatus() {
        try {
            const res = await fetch(apiStatus);
            const data = await res.json();

            if (data.status === "ok") {
                statusEl.innerHTML = `
                    <span class="status-dot dot-green"></span>
                    <span>Conectado</span>
                `;
                lastFeedEl.textContent = data.ultimaAlimentacion || "-";
                loadHistory();
            } else {
                throw new Error("Estado no OK");
            }
        } catch (err) {
            statusEl.innerHTML = `
                <span class="status-dot dot-red"></span>
                <span>Error de conexión</span>
            `;
            feedHistoryEl.innerHTML = '<div class="loading">No se pudo cargar el historial</div>';
            console.error(err);
        }
    }

    async function loadHistory() {
        feedHistoryEl.innerHTML = '<div class="loading">Cargando historial...</div>';

        try {
            const res = await fetch(`${apiBase}/history`);
            const data = await res.json();

            if (data.historial && data.historial.length > 0) {
                feedHistoryEl.innerHTML = data.historial.map(item => `
                    <div class="history-item">
                        <span class="history-icon">🍖</span>
                        <span class="history-time">${item}</span>
                    </div>
                `).join('');
            } else {
                feedHistoryEl.innerHTML = '<div class="loading">No hay alimentaciones registradas</div>';
            }
        } catch (err) {
            feedHistoryEl.innerHTML = '<div class="loading">Error al cargar el historial</div>';
            console.error(err);
        }
    }

    async function alimentarManual() {
        const btn = document.getElementById("btn-feed");
        btn.disabled = true;
        btn.innerHTML = "⏳ Alimentando...";

        try {
            const res = await fetch(apiFeed, { method: "POST" });
            const data = await res.json();

            if (data.message) {
                alert("✅ " + data.message);
                await loadStatus();
            } else {
                alert("⚠️ Error inesperado en la respuesta");
            }
        } catch (err) {
            alert("❌ Error al conectar con la API");
            console.error(err);
        }

        btn.disabled = false;
        btn.innerHTML = "🐾 Alimentar Manualmente";
    }

    document.getElementById("btn-feed").addEventListener("click", alimentarManual);

    loadStatus();
    setInterval(loadStatus, 30000);
</script>